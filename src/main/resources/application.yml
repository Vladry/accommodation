# сейчас проект настроен на то, что будет выполняться hibernate-boot создание таблиц в БД
# и, затем выполнятся файлы  schema.sql  и data.sql
# для справки:
#    https://www.baeldung.com/spring-boot-data-sql-and-schema-sql

server:
  port: 8000
spring:
  h2:
    console:
      enabled: false
      settings:
        trace: false
---
spring:
  profiles:
    active:  local
---
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
      generate_ststistics: false
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: false
  config:
    activate:
      on-profile: local

jwt:
  secret: ieu2rh98sdoifio3q4f
  secretRefresh: fej981349jofqefqer
  secretPasswordReset: hf139heiuqfhqr34
  secretPasswordUpdate: t9k09k90qedk90q9k0
  expiration: 7200
  expirationRefresh: 604800
  expirationPasswordReset: 86400
  expirationPasswordUpdate: 3600
  header: Authorization
---
spring:
  #    для включения авто_ заполнения БД, в физическую (не h2 базу) еще нужно добавить:
  sql:
    init:
      #      mode: never
      mode: always  #always - для самой первой заливки данных в БД
  datasource:
    url: jdbc:postgresql://localhost:5432/book_db....????
    username:
    password:
    driver_class_name: org.postgresql.Driver
  jpa:
    database: postgresql
    defer_datasource_initialization: true # true оставить ТОЛЬКО для самого первого запуска, когда в пустую БД заливаем данные! далее сделать false
#    defer_datasource_initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        generate_ddl: true
      generate_ststistics: false
    show_sql: false
    hibernate:
      # https://russianblogs.com/article/85481550836/    ,  https://docs.spring.io/spring_boot/docs/1.1.0.M1/reference/html/howto_database_initialization.html
      ddl_auto: update
  config:
    activate:
      on_profile: prod


