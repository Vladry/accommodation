# сейчас проект настроен на то, что будет выполняться hibernate-boot создание таблиц в БД
# и, затем выполнятся файлы  schema.sql  и data.sql
# для справки:
#    https://www.baeldung.com/spring-boot-data-sql-and-schema-sql


# ОБЩИЕ ПАРАМЕТРЫ
api:
  ver: /api/v1
server:
  port: 8000
spring:
  config:
    import: optional:secrets.properties[.properties]
  profiles:
    active: local
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          time_zone: UTC
#  jackson:
#    default-property-inclusion: non_null     #позволит избежать указания во всех responseDto-шках  @JsonInclude(JsonInclude.Include.NON_EMPTY) для случаев, если не хочу, чтобы на фронт улетали пустые поля
CLOUDINARY_SECRET: P6FFb0lbPJkqkIR-9FshinRLNKo

jwt:
  header: Authorization
  accessTokenExpiration: 600   #  10 минут = 10*60 = 600 сек
  accessTokenRememberMeExpiration: 28800   #  секунды  24*1200 = 24 часа
  refreshTokenExpiration:  21   #  дни
  passwordResetExpiration:  3   #  дни
  passwordUpdateExpiration: 3   #  часы

#aws:
#  access-key-id: ${AWS_ACCESS_KEY_ID}
#  access-secret-key: ${AWS_SECRET_KEY}

---
# КОНФИГУРАЦИЯ ПОД H2
logging: # https://habr.com/ru/post/521950/
  level:
    root: info
    com: error
    org: error
#    file: appLog.log
spring:
  #  config:
  #    import: optional:file:secrets.properties[.properties]
  config:
    activate:
      on-profile: local
  h2:
    console:
      enabled: true   # http://localhost:8000/h2-console/
      settings:
        trace: false
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
#        для пакетной отправки фотографий:
        jdbc:
          batch_size: 40
#        тоже для пакетной отправки фотографий:
        order_updates: true
        #        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
      generate_statistics: false
    generate-ddl: true
    hibernate:
      ddl-auto: update  # update - будет менять настройки реляционной модели (таблиц) если я в коде буду менять объекты данных (меняется объектная модель)
    show-sql: false
#spring.jpa.properties.hibernate.generate_statistics=true

---
# КОНФИГУРАЦИЯ ПОД POSTGRES
spring:
  #    для включения авто_ заполнения БД, в физическую (не h2 базу) еще нужно добавить:
  sql:
    init:
      #      mode: never
      mode: always  #always - для самой первой заливки данных в БД
  datasource:
    url: jdbc:postgresql://localhost:5432/book_db....????
    username:
    password:
    driver_class_name: org.postgresql.Driver
  jpa:
    database: postgresql
    defer_datasource_initialization: true # true оставить ТОЛЬКО для самого первого запуска, когда в пустую БД заливаем данные! далее сделать false
    #    defer_datasource_initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        generate_ddl: true
      generate_statistics: false
    show_sql: false
    hibernate:
      # https://russianblogs.com/article/85481550836/    ,  https://docs.spring.io/spring_boot/docs/1.1.0.M1/reference/html/howto_database_initialization.html
      ddl_auto: update
  config:
    activate:
      on_profile: prod


